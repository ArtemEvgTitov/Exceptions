
# Реализуйте метод, принимающий в качестве аргумента целочисленный массив.
# Если длина массива меньше некоторого заданного минимума,
# метод возвращает -1, в качестве кода ошибки, иначе - длину массива.
def ShowArray(arr):
    if arr is None or arr.length < 1:
        return -1
    return len(arr)

# Реализуйте метод, принимающий в качестве аргумента целочисленный массив и некоторое значение. 
# Метод ищет в массиве заданное значение и возвращает его индекс. При этом, например:
# 1. если длина массива меньше некоторого заданного минимума, метод возвращает -1, в качестве кода ошибки.
# 2. если искомый элемент не найден, метод вернет -2 в качестве кода ошибки.
# 3. если вместо массива пришел null, метод вернет -3
# 4. придумайте свои варианты исключительных ситуаций и верните соответствующие коды ошибок.
# Напишите метод, в котором реализуйте взаимодействие с пользователем. 
# То есть, этот метод запросит искомое число у пользователя, вызовет первый, 
# обработает возвращенное значение и покажет читаемый результат пользователю. 
# Например, если вернулся -2, пользователю выведется сообщение: “Искомый элемент не найден”.
class Cool:
    def __init__(self, arr, num):
        self.arr = arr
        self.number_for_search = num

    def get_length(self):
        if not len(self.arr):
            return -1
        return len(self.arr)

    def search_number(self):
        if len(self.arr) < 2:
            return -1
        elif self.number_for_search not in self.arr:
            return -2
        elif self.arr is None:
            return -3
        elif self.number_for_search == 42:
            return "42 is cool number"
        return self.arr.index(self.number_for_search)


a = Cool([1, 2, 3, 4], 4)
print(a.search_number())
